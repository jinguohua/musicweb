<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">


       
       <!--读取外部properties配置文件  -->
       <context:property-placeholder location="classpath:dbcp.properties"/>
                       
       <!-- 配置dbcp2连接池 datasource -->                      
       <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
       	<property name="url" value="${url}"></property>
       	<property name="driverClassName" value="${driverClassName}"></property>
       	<property name="username" value="${mysql.username}"></property>
       	<property name="password" value="${mysql.password}"></property>
       	<property name="initialSize" value="${initialSize}"></property>
       	<property name="maxIdle" value="${maxIdle}"></property>
       	<property name="minIdle" value="${minIdle}"></property>
       	<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"></property>
       	<property name="removeAbandonedOnBorrow" value="${removeAbandonedOnBorrow}"></property>
       	<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"></property>
       	<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}"></property>
       </bean>
       
       <!-- 配置一个hibernate的sessionFactory -->
       <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
       		<!--给该sessionfactory关联一个数据源  -->
       		<property name="dataSource" ref="dataSource"></property>
       		<!--告诉这个sessionfactory去加载哪一个hibernate的主配置文件  -->
       		<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
       		<!--告诉这个sessionfactory去哪里扫描hibernate实体类  -->
       		<property name="packagesToScan">
       			<list>
            		<value>com.music.entity</value>
        		</list>
       		</property>
<!--        		<property name="defaultAutoCommit" value="true" />
 -->       
       </bean>
       
       <!-- 配置JDBC的事务管理器  -->
       <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
       	<property name="dataSource" ref="dataSource"></property>
       </bean>
       
       <!--配置hibernate提供的事务管理器
       	配置hibernate的声明式事务后：
       		所有的CRUD操作，hibernate会自动提供事务管理（事务的开启和关闭操作）。
       		使用了hibernate提供的事务管理器后，hibernate会自动去注册session绑定策略
       		<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate3.SpringSessionContext</prop>
       
         -->
       <bean id="txManagerHibernate" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
       		<property name="sessionFactory" ref="sessionFactory"></property>
       </bean>
       
       <!--  配置声明式事务:将上面的事务管理器配置成一个切面类-->
	<tx:advice transaction-manager="txManagerHibernate" id="txAdvice">
		<tx:attributes>
			<tx:method name="modify*" propagation="REQUIRED"/>
			<tx:method name="deposit*" propagation="REQUIRED"/>
			<tx:method name="withdraw*" propagation="REQUIRED"/>
			<tx:method name="transfer*" propagation="REQUIRED"/>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="*" propagation="SUPPORTS"/>
		</tx:attributes>
	</tx:advice>
	<!-- 配置事物切面 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.music..*.*(..))" id="pointcut1"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut1"/>
	</aop:config>
       
       	<tx:annotation-driven transaction-manager="txManagerHibernate"/>
       
       
       
</beans>